// handlers/messages.js
const { loadCommands } = require("../lib/commandLoader");
let commandsCache = null;

// ุฑุฏูุฏ ูููุงุช ููุชุงุญูุฉ (ุงุฎุชูุงุฑู)
let keywordReplies = {};
try {
  keywordReplies = require("../config/keywords");
} catch (_) {
  keywordReplies = {};
}

/**
 * ูุฑุณู ุชูููุญูุง ุงูุชุฑุงุถููุง ูู "ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ ููุท" ููู 24 ุณุงุนุฉ ูุญุฏ ุฃุฏูู ููู ูุญุงุฏุซุฉ.
 * ุชูุนุงุฏ ุชููุฆุชู ุนูุฏ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุนูููุฉ (ุฐุงูุฑุฉ ูุคูุชุฉ).
 */
const defaultHintLastSent = new Map(); // chatId -> timestamp(ms)
const HINT_INTERVAL_MS = 24 * 60 * 60 * 1000; // 24 ุณุงุนุฉ

/** ูุต ุงูุฑุณุงูุฉ ุงูุงูุชุฑุงุถูุฉ */
const DEFAULT_HINT_TEXT = [
  "๐ ุฃููุงู ูุณููุงู! ุฃูุง ุจูุช ูุงุชุณุงุจ ุชุงุจุน ูููุทููุฑ *ุจุณุงู ุญููุฏ*.",
  "",
  "ูุนุฑุถ ุงูุฃูุงูุฑ: ุฃุฑุณู *ูุณุงุนุฏุฉ*.",
  "ููู ุนูุฏู ุงุณุชูุณุงุฑ ููุฏุนูุ ุงูุชุจ ุฑุณุงูุชู ุงูุขู ูุฃูุง ุฃูุตููุง. ๐",
].join("\n");

module.exports = function registerMessageHandlers(sock, logger) {
  if (!commandsCache) {
    commandsCache = loadCommands(logger); // ุชุญููู ุฃูุงูุฑ ูุฌูุฏ commands/ ูุฑุฉ ูุงุญุฏุฉ
  }

  // ุฌููุฒ ูุฌููุนุฉ ุจุฃุณูุงุก ุงูุฃูุงูุฑ (ูุงููุฑุงุฏูุงุช) ูููุน ุชุนุงุฑุถูุง ูุน ุงููููุงุช ุงูููุชุงุญูุฉ
  const commandWords = new Set();
  if (commandsCache && commandsCache.size > 0) {
    for (const mod of commandsCache.values()) {
      if (mod?.name) commandWords.add(String(mod.name).toLowerCase());
      if (Array.isArray(mod?.aliases)) {
        for (const a of mod.aliases) commandWords.add(String(a).toLowerCase());
      }
    }
    // ูุถูู ูุฐูู ุฃูุงูุฑ fallback ุงูุนุฑุจูุฉ (ุฅู ุงุณุชูุฎุฏูุช)
    ["ุงุฎุชุจุงุฑ", "ุงูููุช", "ุงููุนุฑู", "ูุณุงุนุฏุฉ", "id"].forEach((w) => commandWords.add(w));
  }

  sock.ev.on("messages.upsert", async ({ messages }) => {
    try {
      if (!messages || !messages.length) return;
      const msg = messages[0];

      // ุชุฌุงูู ุฑุณุงุฆู ุงูุญุงูุฉ ูุงูุฑุณุงุฆู ูู ุงูุจูุช ููุณู
      if (msg.key?.remoteJid === "status@broadcast") return;
      if (msg.key?.fromMe) return;

      const chatId = msg.key.remoteJid;
      const isGroup = chatId?.endsWith("@g.us");
      const senderId = (msg.key?.participant || msg.key?.remoteJid || "").split(":")[0];

      // ุงุณุชุฎุฑุงุฌ ูุต ุงูุฑุณุงูุฉ ูู ุฃูุซุฑ ูู ููุน
      const body =
        msg.message?.conversation ||
        msg.message?.extendedTextMessage?.text ||
        msg.message?.imageMessage?.caption ||
        msg.message?.videoMessage?.caption ||
        msg.message?.documentMessage?.caption ||
        msg.message?.buttonsResponseMessage?.selectedDisplayText ||
        msg.message?.templateButtonReplyMessage?.selectedDisplayText ||
        "";

      const text = (body || "").trim();
      if (!text) return;

      const reply = (t) => sock.sendMessage(chatId, { text: t }, { quoted: msg });

      // ุชูุณูู ุฃูู ูููุฉ ููุนุฑูุฉ ุฅู ูุงูุช ุฃูุฑูุง
      const [firstWordRaw, ...args] = text.split(/\s+/);
      const firstWord = (firstWordRaw || "").toLowerCase();

      // 1) ุฃูุงูุฑ ูู ูุฌูุฏ commands/ (ุจุฏูู "!" + ุจุงูุนุฑุจู)
      if (commandsCache && commandsCache.size > 0) {
        const mod = commandsCache.get(firstWord);
        if (mod && typeof mod.run === "function") {
          return mod.run({ sock, msg, args, logger, chatId, senderId, isGroup });
        }
      }

      // 2) Fallback ูุฃูุงูุฑ ุจุณูุทุฉ ุจุงูุนุฑุจูุฉ (ุจุฏูู ุฅูุฌููุฒูุฉ ูุจุฏูู !)
      switch (firstWord) {
        case "ุงุฎุชุจุงุฑ": {
          const ts = (msg.messageTimestamp || Math.floor(Date.now() / 1000)) * 1000;
          const latency = Date.now() - ts;
          await reply(`๐ ุงุฎุชุจุงุฑ ุงูุงุณุชุฌุงุจุฉ: ~${latency >= 0 ? latency : 0} ูููู ุซุงููุฉ`);
          return;
        }

        case "ุงูููุช": {
          await reply(
            `๐ ุงูููุช ุงูุญุงูู: ${new Date().toLocaleString("ar-YE", { timeZone: "Asia/Aden" })}`
          );
          return;
        }

        case "ุงููุนุฑู":
        case "id": {
          await reply(
            `๐ ุงููุญุงุฏุซุฉ: ${chatId}\n๐ค ุงููุฑุณู: ${senderId}\n๐ฅ ูุฌููุนุฉ: ${isGroup ? "ูุนู" : "ูุง"}`
          );
          return;
        }

        case "ูุณุงุนุฏุฉ": {
          // ุฅู ูู ุชูุฌุฏ ูุณุฎุฉ help ูู commands/ ูุฃู ุณุจุจุ ูุฑุณู ูุงุฆูุฉ ูุจุณุทุฉ
          await reply(
            [
              "๐ค *ูุงุฆูุฉ ุงูุฃูุงูุฑ*",
              "",
              "๐ ูุฑุญุจุง โ ููุชุฑุญูุจ",
              "๐ ุงุฎุชุจุงุฑ โ ููุงุณ ุงูุงุณุชุฌุงุจุฉ",
              "๐ ุงูููุช โ ุนุฑุถ ุงูููุช ุงูุญุงูู",
              "๐ ุงููุนุฑู โ ุนุฑุถ ูุนุฑูุงุช ุงููุญุงุฏุซุฉ",
              "๐ ูุณุงุนุฏุฉ โ ูุฐู ุงููุงุฆูุฉ",
            ].join("\n")
          );
          return;
        }
      }

      // 3) ุฑุฏูุฏ ูููุงุช ููุชุงุญูุฉ โ ุจุดุฑุท ุฃูุง ุชุชุนุงุฑุถ ูุน ุฃุณูุงุก ุฃูุงูุฑูุง
      const lower = text.toLowerCase();
      if (!commandWords.has(lower) && keywordReplies[lower]) {
        await reply(keywordReplies[lower]);
        return;
      }

      // 4) ุงูุฑุณุงูุฉ ุงูุงูุชุฑุงุถูุฉ โ ูู ุงูุฎุงุต ููุทุ ููู 24 ุณุงุนุฉ ูุญุฏ ุฃุฏูู
      if (!isGroup) {
        const now = Date.now();
        const last = defaultHintLastSent.get(chatId) || 0;
        if (now - last >= HINT_INTERVAL_MS) {
          await reply(DEFAULT_HINT_TEXT);
          defaultHintLastSent.set(chatId, now);
        }
        // ุฅุฐุง ูู ุชููุถู 24 ุณุงุนุฉ ููุฐ ุขุฎุฑ ุฅุฑุณุงูุ ูุง ุชุฑุณู ุดูุฆูุง ูุชุฌูุจ ุงูุชุดููุด.
      }
      // ูู ุงููุฌููุนุงุช: ูุง ูุฑุณู ุฃู ุฑุณุงูุฉ ุงูุชุฑุงุถูุฉ.
    } catch (err) {
      logger.error({ err, stack: err?.stack }, "messages.upsert handler error");
    }
  });
};
